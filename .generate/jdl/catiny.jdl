DEFAULT_MIN_LENGTH = 64
DEFAULT_MAX_LENGTH = 2048
enum StatusName
{
	ONLINE (Online)
	OFFLINE (Offline)
	BUSY (Busy)
	TEMPORARILY_ABSENT ("Temporarily absent")
}

enum DeviceType
{
	MOBILE (Mobile)
  TABLE (Table)
  DESKTOP (Desktop)
  LAPTOP (Laptop)
  OTHER_DEVICE ("Other device")
}

enum NotifyType
{
  SYSTEM (System)
  MANAGER (Manager)
  ADMIN (Admin)
  USER (User)
  ANONYMOUS (Anonymous)
}

enum PostType
{
  GROUP (Group)
  USER (User)
  PAGE (Page)
}

entity HanhChinhVN
{
    /** name Example("Ninh Kiều")*/
    name String required
    /** slug Example("ninh-kieu")*/
    slug String required
    /** type Example("quan")*/
    type String required
    /** nameWithType Example("Quận Ninh Kiều") */
    nameWithType String  required
    /** code Example("916") */
    code String required
    /** parentCode Example("92") , equal to 0 is the city*/
    parentCode String required
    /** path Example("Ninh Kiều, Cần Thơ")*/
    path String
    /** pathWithType Example("Quận Ninh Kiều, Thành phố Cần Thơ")*/
    pathWithType String
}

// phần cấu hình Server
/**
* @what?            -> The ServerConfig entity.
* @why?             ->
* @use-to           -> Chứa thông tin của một cụm máy chủ database , app ...
* @commonly-used-in ->
*
* @describe         ->
*/
entity ServerConfig
/**
* @what?            -> The ServerDetails entity.
* @why?             ->
* @use-to           -> Thông tin chi tiết của từng máy chủ
* @commonly-used-in ->
*
* @describe         -> ví dụ có một cụm app docker swarm front end sẽ được chia đều các kết nối đến máy chủ này giảm tải lưu lượng mạng
*/
entity ServerDetails
/**
* @what?            -> The ServerType entity.
* @why?             ->
* @use-to           -> Loại server là gì . app , db , cache , search ...
* @commonly-used-in ->
*
* @describe         ->
*/
entity ServerType
relationship OneToOne
{
	ServerConfig to ServerDetails
}
relationship ManyToMany
{
	ServerConfig to ServerType
}

/**
* @what?            -> The MasterUser entity.\n
* @why?             -> User (mặc định của jhipster) không cho thêm cột (nếu thêm thì sau khó update)
* @use-to:          -> Lưu thông tin cơ bản của một người dùng
* @commonly-used-in -> Thường sử dụng khi thao tác với tài khoản trong service trên server
*
* @describe      	  -> Những dữ liệu của tài khoản và thương xuyên sử dụng (trong service) sẽ được lưu ở đây
*/
entity MasterUser
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique
    /** avatarImage : ảnh đại diện của người dùng
      * @describe   : field này ở dưới dạng Json giống mẫu sau
      *   default <required> : url ảnh mặc định (ảnh đã qua xử lý giảm dung lượng kích cỡ được cắt theo một chuẩn nhất định...)
      *   original <required>: url ảnh nguyên bản chưa qua xử lý
      *   big                : url ảnh kích thước lớn
      *   medium             : url ảnh kích thước trung bình
      *   small              : url ảnh kích thước nhỏ
      * @author           -> yuvytung.
      */
    avatarImage TextBlob
    /** fullName : tên hiển thị . thực ra chỉ là firstName + lastName . nhưng sẽ rất bất tiện */
    fullName String required
    /** nickname : biệt danh của người dùng */
    nickname String
    /** quickInfo      : @type Json -> thông tin nhanh về người dùng này dùng trong giới thiệu sơ khi chỉ chuột vào người dùng */
    quickInfo TextBlob


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?         	  -> The UserProfile entity .
* @why?          	  ->
* @use-to:       	  -> Lưu thông tin mở rộng của người dùng (trường học cơ quan làm việc ...)
* @commonly-used-in -> Trang cá nhân (trang giới thiệu)
*
* @describe      	  -> Đây là bảng NoSQL một số trường ở dưới dạng JSON ,NoSQL vì dữ liệu mỗi trường học , cơ quan ,nới sống ... đôi khikhông giống nhau
*/
entity UserProfile
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique
    /** avatarImage : ảnh đại diện của người dùng
      * @describe   : field này ở dưới dạng Json giống mẫu sau
      *   default <required> : url ảnh mặc định (ảnh đã qua xử lý giảm dung lượng kích cỡ được cắt theo một chuẩn nhất định...)
      *   original <required>: url ảnh nguyên bản chưa qua xử lý
      *   big                : url ảnh kích thước lớn
      *   medium             : url ảnh kích thước trung bình
      *   small              : url ảnh kích thước nhỏ
      * @author           -> yuvytung.
      */

    /** work : nơi làm việc
     * @data-type : Json
     * @describe : những nơi, công ty đã từng làm việc , khoảng thời gian vị trí ...
     * @example :
     *  -companyName
     *  -companyAddress
     *  -companyContact
     * @author           -> yuvytung.
     */
   	work TextBlob
    /** education : học vấn
     * @data-type : Json
     * @describe : học vấn thế nào tốt nghiệp trường nào học tại đâu khoảng thời gian nào , bằng cấp chứng chỉ ra sao  ... */
    education TextBlob
    /** placesLived : những nơi đã từng sống
     * @data-type : Json
     * @describe : sống ở đâu khoảng thời gian nào có gì tại nơi sống ... */
    placesLived TextBlob
    /** contactInfo : những thông in liên hệ cơ bản
     * @data-type : Json
     * @describe : số điện thoại email , địa chỉ ... */
    contactInfo TextBlob
    /** webSocialLinks : các mạng xã hội sử dụng . trang web ...
     * @data-type : Json
     * @describe : thông tin về mạng xã hội sử dụng ... */
    webSocialLinks TextBlob
    /** basicInfo : thông tin cơ bản của người dùng
     * @data-type : Json
     * @describe : những thông tin tóm tắt để giới thiệu nổi bật */
    basicInfo TextBlob
    /** relationshipInfo : những mối liên hệ với ai đó
     * @data-type : Json
     * @describe : ví dụ như đã kết hôn với ai ... */
    relationshipInfo TextBlob
    /** family : những người trong gia đình
     * @data-type : Json
     * @describe : anh em bạn bè người thân trong gia đình */
    family	TextBlob
    /** detailAbout : chi tiết về bản thân mình
     * @data-type : Json
     * @describe : những thôn tin chi tết về bản thân như ngày tháng năm sinh nơi ở ... */
    detailAbout TextBlob
    /** lifeEvents : sự kiên lớn trong cuộc đời
     * @data-type : Json
     * @describe : những sự kiện như sinh , tốt nghiệp . lấy vợ chồng , có con ... */
    lifeEvents TextBlob
    /** hobbies : sở thích của bản thân
     * @data-type : Json
     * @describe : sở thích của ban thân là gì , phim , nhạc , sách , ... */
    hobbies TextBlob
    /** featured : điểm nổi bật của bản thân
     * @data-type : Json
     * @describe : cá tính thế nào , đã làm nhứng gì rất đặc sắc .... */
    featured TextBlob


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?         	-> The AccountStatus entity.
* @why?          	->
* @use-to:       	-> Lưu , quản lý trạng thái của tài khoản đang on hay off ...
* @commonly-used-in -> Những nghiệp vũ nhắn tin,thông báo cần biết trạng thái của tài khoản ...
*
* @describe      	->
*/
entity AccountStatus
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique
    /** accountStatus  : thạng thái hiện tại của người dùng*/
    accountStatus StatusName
    /** lastVisited    : thời gian truy cập cuối cùng gần nhất  */
    lastVisited Instant
    /** statusComment  : người dùng comment lại trạng thái để hiển thị ra nếu muốn */
    statusComment String



    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The DeviceStatus entity.
* @why?             ->
* @use-to           -> Những thiết bị đang truy cập thông tin chi tiết về chúng ...
* @commonly-used-in -> Những nghiệp vụ cần biết chi tiết trang thái của các thiết bị
*
* @describe         ->
*/
entity DeviceStatus
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique
    /** deviceName     : tên của thiết bị nếu có */
    deviceName String
    /** deviceName     : loại thiết bị */
    deviceType DeviceType
    /** deviceStatus   : trạng thái hiện tại của thiết bị là gì*/
	  deviceStatus StatusName
	  /** lastVisited    : thời gian truy cập lần cuối cùng của thiết bị này */
    lastVisited Instant
    /** statusComment  : người dùng comment lại trạng thái nếu muốn */
    statusComment String

    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The Friend entity.
* @why?             ->
* @use-to           -> Quản lý phần kết bạn, các mối liên hệ bạn bè ...
* @commonly-used-in -> Bạn bè và các liên kết bạn bè ...
*
* @describe         ->
*/
entity Friend
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The FollowUser entity.
* @why?             ->
* @use-to           -> Quản lý các chủ đề mà người dùng đăng ký theo dõi
* @commonly-used-in -> Chủ đề mà người dùng theo dõi
*
* @describe         ->
*/
entity FollowUser
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The FollowGroup entity.
* @why?             ->
* @use-to           -> Quản lý các nhóm mà người dùng đăng ký theo dõi
* @commonly-used-in -> Chủ đề mà người dùng theo dõi
*
* @describe         ->
*/
entity FollowGroup
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The FollowPage entity.
* @why?             ->
* @use-to           -> Quản lý các trang mà người dùng đăng ký theo dõi
* @commonly-used-in -> Chủ đề mà người dùng theo dõi
*
* @describe         ->
*/
entity FollowPage
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The FileInfo entity.
* @why?             ->
* @use-to           -> Quản lý thông tin về file, vị trí file ...
* @commonly-used-in -> Những file mà người dùng upload (ảnh video ...)
*
* @describe         ->
*/
entity FileInfo
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique
    /** typeFile       : loại file */
    typeFile String
    /** nameFile       : tên của file nếu có */
    nameFile String
    /** pathOriginal   : đường dẫn file nguyên gốc */
    pathOriginal String maxlength(512)
    /** pathProcessed  : @type Json -> đường dẫn file đã qua xử lý --> có nhiều file thie kicks cỡ dung lượng cất lượng ...*/
    pathProcessed TextBlob

    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The PagePost entity.
* @why?             ->
* @use-to           -> Lưu các Trang người dùng tạo ra
* @commonly-used-in -> Cũng tương tự như bài đăng của một người dùng những sẽ chuyên biệt về  một chủ đề
*
* @describe         ->
*/
entity PagePost
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique
    /** name           : tên của page này*/
    name String required
    /** quickInfo      : @type Json ->thông tin nổi bật giới thiệu sơ qua về page */
    quickInfo TextBlob

    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The PageProfile entity
* @why?             ->
* @use-to           -> Lưu phần giới thiệu của các trang
* @commonly-used-in -> hiển thị giới thiệu của các trang
*
* @describe         ->
*/
entity PageProfile
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The GroupPost entity
* @why?             -> mọi người cần tạo ra một nhóm riêng hoặc chung để có thể trao đổi
* @use-to           -> quản lý nhóm
* @commonly-used-in -> các nhóm
*
* @describe         ->
*/
entity GroupPost
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique
    /** name           : tên của group này */
    name String required
    /** quickInfo      : @type Json -> thông tin giới thiệu sơ qua của group này */
    quickInfo TextBlob


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The Post entity
* @why?             ->
* @use-to           -> lưu các bài viết của người dùng
* @commonly-used-in -> đăng và xem các bài viết
*
* @describe         ->
*/
entity Post
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique
    title String
    content TextBlob
    postType PostType


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The PostComment entity.
* @why?             ->
* @use-to           -> Lưu những bình luận của người dùng trong một bài đăng cụ thể
* @commonly-used-in -> được biết dưới dạng bình luận của các bài đăng
*
* @describe         ->
*/
entity PostComment
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The PostLike entity.
* @why?             ->
* @use-to           -> Lưu thông tin về những lượt like của bài đăng
* @commonly-used-in ->
*
* @describe         ->
*/
entity PostLike
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The GroupProfile entity.
* @why?             ->
* @use-to           -> Những thông tin trong phần giới thiệu của nhóm được lưu tại đây
* @commonly-used-in -> Thường thấy trong phần giới thiệu của nhóm
*
* @describe         -> Đây là một bảng NoSQL dữ liệu một số field ở dưới dạng Json
*/
entity GroupProfile
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The NewsFeed entity.
* @why?             -> người dùng mà xem trực tiếp các Post thì một số bài đăng sẽ không phù hợp dễ gây chán khi xem
* @use-to           -> Ở đây chứa thông tin của những Post hiển thị cho người dùng xem
* @commonly-used-in -> Được sử dụng trong phần hiển thị các bài đăng trên news feed
*
* @describe         -> trong phần bản tin thay vì hiển thị trực tiếp các Post cho người dùng xem
*  ta sẽ tính toán độ phù hợp và add vào bảng này sau đó cho người dùng xem
*/
entity NewsFeed
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The MessageGroup entity.
* @why?             ->
* @use-to           -> Chứa thông tin các nhóm mà hiện tại người dùng đang ở trong đó (phần nhắn tin)
* @commonly-used-in -> Hiển thị các tin nhắn
*
* @describe         -> một nhóm tạo ra sẽ là một uuid . nếu nhắn tin cặp thì sẽ sắp xếp login sau đó hash md5 rồi chuyển thành định dạng uuid
*/
entity MessageGroup
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique
    /** groupName */
    groupName String
    groupId UUID required unique
    /** addBy */
    addBy String


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The MessageContent entity.
* @why?             ->
* @use-to           -> Chứa Những tin nhắn trong các nhóm cụ thể
* @commonly-used-in ->
*
* @describe         ->
*/
entity MessageContent
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique

    content TextBlob
    /** status : trạng thái của tin nhắn này, đã gửi chưa , ai đã nhận được , đã xem chưa đã thu hồi hay đã xóa...
     * @type           : Json */
    status TextBlob
    /** searchField : lưu content tin nhắn lọc dấu ... để sau này search */
    searchField TextBlob

    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The RankUser entity.
* @why?             ->
* @use-to           -> Xếp hạng của bản thân Trong toàn mạng , trong khu vực , trong nhóm người
* @commonly-used-in -> thường thấy trong phần
*
* @describe         ->
*/
entity RankUser
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The RankGroup entity.
* @why?             ->
* @use-to           -> Xếp hạng theo nhóm : toàn mạng ,khu vực , nhóm người (khoảng 30-100 người)
* @commonly-used-in ->
*
* @describe         ->
*/
entity RankGroup
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The Notification entity.
* @why?             ->
* @use-to           -> Chứa những thông báo đến người dùng
* @commonly-used-in -> Thường xuất hiện trong chức năng thông báo của người dùng
*
* @describe         ->
*/
entity Notification
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique
    /** notifyType     : loại thông báo */
    notifyType NotifyType


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The Album entity
* @why?             ->
* @use-to           -> Lưu thông tin về một bộ album của người dùng
* @commonly-used-in -> Người dùng nhóm một bộ ảnh vào một album
*
* @describe         ->
*/
entity Album
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The Video entity.
* @why?             ->
* @use-to           -> Lưu thông tin video mà người dùng upload lên
* @commonly-used-in ->
*
* @describe         ->
*/
entity Video
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The Image entity.
* @why?             ->
* @use-to           -> Lưu thông tin Ảnh mà người dùng upload lên
* @commonly-used-in ->
*
* @describe         ->
*/
entity Image
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The Album entity.
* @why?             ->
* @use-to           -> Lưu thông tin video ... khi đã kết thúc stream
* @commonly-used-in -> Sau khi kết thức stream thì video lưu lai cũng chỉ tương tự như một video thông thường
*
* @describe         ->
*/
entity VideoStream
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The Album entity
* @why?             ->
* @use-to           -> Lưu từng phần video dưới dạng base64 khi đang stream video
* @commonly-used-in -> thường sử dụng khi đang live stream
*
* @describe         -> stream xong và xử lý xong không cân thì xóa (đây chỉ là bảng tạm)
*/
entity VideoLiveStreamBuffer
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The Album entity
* @why?             ->
* @use-to           -> Lưu những chủ đề mà người dùng quan tâm
* @commonly-used-in -> chủ đề quan tâm để lọc ra cho người dùng xem
*
* @describe         ->
*/
entity TopicInterest
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}
/**
* @what?            -> The TodoList entity.
* @why?             ->
* @use-to           -> Lưu danh sách công việc gợi ý cho người dùng thực hiện
* @commonly-used-in -> Hiển thị bảng Todo cho người dùng thực hiện
*
* @describe         ->
*/
entity TodoList
{
    /** uuid *         : this is reference key (client) .primary key được sử dụng trong các service còn uuid này để định danh giao tiếp với client(frontend) */
    uuid UUID required unique


    /** owner *        : @type Json -> chủ sở hữu bản ghi này --> nhớ sử dụng Set thay cho List*/
    owner TextBlob
    /** role *         : @type Json -> những role được phép thực hiện <xem,sửa,xóa> */
    role TextBlob
    /** modifiedClass *: thực hiện sửa đổi bản ghi này ở service class nào */
    modifiedClass String
    /** createdDate *  : thời gian tạo ra bản ghi này (lần đầu tiên) */
    createdDate  Instant
    /** modifiedDate * : thời gian sửa bản ghi này */
    modifiedDate  Instant
    /** createdBy *    : người tạo ra bản gi này (lần đầu tiên) */
    createdBy String
    /** modifiedBy *   : người sửa lại bản ghi này */
    modifiedBy String
    /** comment *      : chú thích thêm hoặc những lưu ý cho bản ghi này ở dưới dạng Json ví dụ >> "comment":"đây là comment mặc định" */
    comment TextBlob
    /** historyUpdate *: @type Json -> lịch sử cập nhật bản ghi này, những bản ghi cũ sẽ được lưu lại ở đây dưới dạng json */
    historyUpdate TextBlob
}

//entity Event //{}
//entity Badge //{}
//entity Story //{}
//entity ChallengesMapDetails  //{}
//entity MyChallengesMap //{}

relationship OneToOne
{
    MasterUser to User with jpaDerivedIdentifier,
    MasterUser{myProfile} to UserProfile,
    MasterUser{myAccountStatus} to AccountStatus,
    GroupPost{profile} to GroupProfile{group}
    PagePost{profile} to PageProfile{page}
    MasterUser{myRank} to RankUser,
    Image{fileInfo} to FileInfo
    Video{fileInfo} to FileInfo,
    VideoStream{video} to Video{videoStream},

//    MasterUser to MyChallengesMap
}

relationship ManyToOne
{
    Friend{friendDetails} to MasterUser,
    FollowUser{followUser} to MasterUser,
    FollowGroup{followGroup} to GroupPost,
    FollowPage{followPage} to PagePost,
    NewsFeed to Post,
    RankUser to RankGroup,
    MessageContent{sender} to MasterUser
    PostLike{userLike} to MasterUser{myLike}
    PostComment{userComment} to MasterUser{myComment}
}
relationship OneToMany
{
    AccountStatus to DeviceStatus,
//    MyChallengesMap to ChallengesMapDetails
  	MasterUser{myPage} to PagePost
    MasterUser{myFile} to FileInfo,
    MasterUser{myNotification} to Notification
    MasterUser{myFriend} to Friend{masterUser},
    MasterUser{myFollowUser} to FollowUser{masterUser},
    MasterUser{myFollowGroup} to FollowGroup{masterUser},
    MasterUser{myFollowPage} to FollowPage{masterUser},
    GroupPost{myPostInGroup} to Post
    MasterUser{myPost} to Post{poster}
    PagePost{myPostInPage} to Post
    MessageGroup to MessageContent
    MasterUser{myNewsFeed} to NewsFeed
    MasterUser{myTodoList} to TodoList
    Post to PostComment
    Post to PostLike
    Post{postShareChildren} to Post{postShareParent}
    PostComment{commentReply} to PostComment{commentParent}
    VideoStream to VideoLiveStreamBuffer
}

relationship ManyToMany
{
    MasterUser{myGroupPost} to GroupPost{userInGroup}
    MasterUser to MessageGroup
    Album to Image,
    TopicInterest to Post
    TopicInterest to PagePost
    TopicInterest to GroupPost
    MasterUser to TopicInterest
}


dto * with mapstruct
paginate * with  infinite-scroll
search * with elasticsearch
service * with serviceImpl
filter *
