# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================
catiny:
  value:
    number-of-cities: 0 # mặc định là không import và tối đa 63 thành phố
  server:
    main:
      host: localhost
    ffmpeg:
      host: localhost
      port: 10022
      username: root
      password: rootVs.
      data:
        video:
          folder-original: /data/catiny/dev/ffmpeg/video/original/
          folder-processed: /data/catiny/dev/ffmpeg/video/processed/
        image:
          folder-original: /data/catiny/dev/ffmpeg/image/original/
          folder-processed: /data/catiny/dev/ffmpeg/image/processed/

logging:
  level:
    ROOT: DEBUG
    tech.jhipster: DEBUG
    org.hibernate.SQL: DEBUG
    com.regitiny.catiny: DEBUG

eureka:
  instance:
    prefer-ip-address: true
  client:
    enabled: false # By default, the JHipster Registry is not used in the "dev" profile
    service-url:
      defaultZone: http://admin:${jhipster.registry.password}@${catiny.server.main.host}:8761/eureka/

management:
  health:
    elasticsearch:
      enabled: false

spring:
  devtools:
    restart:
      enabled: false
      additional-exclude: static/**,.h2.server.properties
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  cloud:
    config:
      uri: http://admin:${jhipster.registry.password}@${catiny.server.main.host}:8761/config
      # name of the config server's property source (file.yml) that we want to use
      name: catiny
      profile: dev
      label: main # toggle to switch to a different version of the configuration as stored in git
      # it can be set to any label, branch or commit of the configuration source Git repository
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:h2:file:./build/h2db/db/catiny;DB_CLOSE_DELAY=-1
    username: catiny
    password:
    hikari:
      poolName: Hikari
      auto-commit: false
  h2:
    console:
      # disable spring boot built-in h2-console since we start it manually with correct configuration
      enabled: false
  jpa:
    database-platform: tech.jhipster.domain.util.FixedH2Dialect
  data:
  elasticsearch:
    rest:
      uris: http://${catiny.server.main.host}:9200
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker
  mail:
    host: localhost
    port: 25
    username:
    password:
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false
  sleuth:
    sampler:
      probability: 1 # report 100% of traces
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://${catiny.server.main.host}:9411
    enabled: false
    locator:
      discovery:
        enabled: true

server:
  port: 8080

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  cache: # Cache configuration
    redis: # Redis configuration
      expiration: 3600 # By default objects stay 1 hour (in seconds) in the cache
      server: redis://${catiny.server.main.host}:6379
      cluster: false
      # server: redis://localhost:6379,redis://localhost:16379,redis://localhost:26379
      # cluster: true
  registry:
    password: admin
  # CORS is only enabled by default with the "dev" profile
  cors:
    # Allow Ionic for JHipster by default (* no longer allowed in Spring Boot 2.4+)
    allowed-origins: 'http://localhost:8100,http://localhost:9000'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: OWVmN2ZjOTAzMDlmODRkYjg1MmJmMDhjNjU1NzZiNDU5YjU2MTIzZDk5M2Q3YzU4MTY2YjdhYzcxMDY2MDJmOWFkZjFmZjUyNzY3M2ZhMDJkYjJlM2ZjMDQ2Yjk3ZjBiOGFlMmZlZWM3NDdhOWUzMGM5YmM4ZTZmNjQ3MjFiNjk=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific JHipster mail property, for standard properties see MailProperties
    base-url: http://127.0.0.1:8080
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
